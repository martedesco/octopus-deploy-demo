name: 🚀 Simple Matrix Deployment

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'scripts/**'
      - '.github/workflows/simple-matrix-deploy.yml'
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Override deployment environment'
        required: false
        default: 'auto'
        type: choice
        options:
        - auto
        - staging
        - production
      test_mode:
        description: 'Run in test mode (faster execution)'
        required: false
        default: true
        type: boolean

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci
      
      - name: 🧪 Run tests
        run: npm test
      
      - name: 🏗️ Build application
        run: npm run build

  deploy:
    name: 🚀 Deploy to Tenants
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tenant: [acme-corp, beta-solutions, startup-demo]
        environment: [staging, production]
        exclude:
          # Don't deploy startup-demo to production
          - tenant: startup-demo
            environment: production
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build application
        run: npm run build
      
      - name: 🔧 Check if deployment should proceed
        id: should-deploy
        run: |
          # Check if we should deploy based on environment override
          if [ "${{ github.event.inputs.deploy_environment }}" = "auto" ] || [ "${{ github.event.inputs.deploy_environment }}" = "" ]; then
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "🎯 Auto mode: deploying to ${{ matrix.environment }}"
          elif [ "${{ github.event.inputs.deploy_environment }}" = "${{ matrix.environment }}" ]; then
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "🎯 Environment match: deploying to ${{ matrix.environment }}"
          else
            echo "should_deploy=false" >> $GITHUB_OUTPUT
            echo "⏭️ Skipping: ${{ matrix.environment }} doesn't match override ${{ github.event.inputs.deploy_environment }}"
          fi
      
      - name: 🔧 Configure deployment environment
        if: steps.should-deploy.outputs.should_deploy == 'true'
        id: deploy-config
        run: |
          if [ "${{ github.event.inputs.deploy_environment }}" = "auto" ] || [ "${{ github.event.inputs.deploy_environment }}" = "" ]; then
            DEPLOY_ENV="${{ matrix.environment }}"
          else
            DEPLOY_ENV="${{ github.event.inputs.deploy_environment }}"
          fi
          
          echo "deployment_env=$DEPLOY_ENV" >> $GITHUB_OUTPUT
          echo "🎯 Using deployment environment: $DEPLOY_ENV"
          echo "🧪 Test mode enabled: ${{ github.event.inputs.test_mode }}"
      
      - name: 🚀 Deploy to ${{ matrix.tenant }} - ${{ steps.deploy-config.outputs.deployment_env }}
        if: steps.should-deploy.outputs.should_deploy == 'true'
        run: |
          echo "🏗️ Deploying to tenant: ${{ matrix.tenant }}"
          echo "🌍 Environment: ${{ steps.deploy-config.outputs.deployment_env }}"
          echo "⏰ Deployment time: $(date)"
          echo "🧪 Test mode: ${{ github.event.inputs.test_mode }}"
          
          # Simulate deployment process with faster timing in test mode
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            echo "📦 Preparing deployment package (test mode - faster)..."
            sleep 1
            
            echo "🔧 Configuring tenant-specific settings..."
            sleep 1
            
            echo "📤 Uploading to ${{ matrix.tenant }} servers..."
            sleep 1
          else
            echo "📦 Preparing deployment package..."
            sleep 2
            
            echo "🔧 Configuring tenant-specific settings..."
            sleep 1
            
            echo "📤 Uploading to ${{ matrix.tenant }} servers..."
            sleep 3
          fi
          
          echo "✅ Deployment completed successfully!"
          echo "🔗 Application URL: https://${{ matrix.tenant }}-${{ steps.deploy-config.outputs.deployment_env }}.example.com"
        
        env:
          TENANT_ID: ${{ matrix.tenant }}
          ENVIRONMENT: ${{ steps.deploy-config.outputs.deployment_env }}
          DATABASE_URL: ${{ matrix.tenant }}_${{ steps.deploy-config.outputs.deployment_env }}_db
          API_URL: https://api.${{ matrix.tenant }}.com
      
      - name: 🔍 Post-deployment verification
        if: steps.should-deploy.outputs.should_deploy == 'true'
        run: |
          echo "🔍 Running health checks for ${{ matrix.tenant }}..."
          
          if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
            sleep 1
          else
            sleep 2
          fi
          
          echo "✅ Health check passed"
          echo "📊 Performance metrics collected"
          echo "🔔 Notifications sent"
          
          # Show some mock metrics
          echo "📈 Response time: $(shuf -i 45-120 -n 1)ms"
          echo "💾 Memory usage: $(shuf -i 40-75 -n 1)%"
          echo "🔢 Active connections: $(shuf -i 15-85 -n 1)"

  summary:
    name: 📋 Deployment Summary
    needs: [test, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 📊 Generate deployment report
        run: |
          echo "## 🚀 Simple Matrix Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Environment Override:** ${{ github.event.inputs.deploy_environment || 'auto' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Test Mode:** ${{ github.event.inputs.test_mode || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "✅ **Status:** All deployments completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🎯 Deployed Tenants:" >> $GITHUB_STEP_SUMMARY
            echo "- acme-corp" >> $GITHUB_STEP_SUMMARY
            echo "- beta-solutions" >> $GITHUB_STEP_SUMMARY
            echo "- startup-demo (staging only)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status:** Some deployments failed" >> $GITHUB_STEP_SUMMARY
          fi